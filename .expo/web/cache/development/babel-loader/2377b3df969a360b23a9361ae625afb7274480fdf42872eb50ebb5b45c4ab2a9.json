{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from 'react';\nimport { Apifetch } from \"../services/axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar SearchBar = function SearchBar(_ref) {\n  var setSearchValue = _ref.setSearchValue;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputValue = _useState2[0],\n    setInputValue = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filterdata = _useState4[0],\n    setfilterData = _useState4[1];\n  var handleInputChange = function handleInputChange(text) {\n    console.log('ttttttt', text);\n    setInputValue(text);\n  };\n  var handleSearch = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var _yield$Apifetch = yield Apifetch('region/europe'),\n        _yield$Apifetch2 = _slicedToArray(_yield$Apifetch, 2),\n        data = _yield$Apifetch2[0],\n        err = _yield$Apifetch2[1];\n      console.log(typeof data, \"search--------------------------------\");\n      setSearchValue(data);\n      setfilterData(data);\n    });\n    return function handleSearch() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var renderItem = function renderItem(second) {\n    return _jsx(View, {\n      children: _jsx(Text, {\n        children: \"hi\"\n      })\n    });\n  };\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: {\n        flex: 1,\n        flexDirection: 'row',\n        width: '95%',\n        padding: 10,\n        justifyContent: 'space-between',\n        backgroundColor: '#D6E4E5',\n        margin: 10,\n        borderRadius: 30\n      },\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter a country name\",\n        onChangeText: handleInputChange,\n        value: inputValue,\n        style: {\n          width: '100%'\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: handleSearch,\n        style: {\n          backgroundColor: '#EB6440',\n          padding: 10,\n          marginRight: 5,\n          borderRadius: 30,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: _jsx(Text, {\n          children: \"Search\"\n        })\n      })]\n    })\n  });\n};\nexport default SearchBar;","map":{"version":3,"names":["React","useState","Apifetch","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SearchBar","_ref","setSearchValue","_useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","_useState4","filterdata","setfilterData","handleInputChange","text","console","log","handleSearch","_ref2","_asyncToGenerator","_yield$Apifetch","_yield$Apifetch2","data","err","apply","arguments","renderItem","second","View","children","Text","style","flex","flexDirection","width","padding","justifyContent","backgroundColor","margin","borderRadius","TextInput","placeholder","onChangeText","value","TouchableOpacity","onPress","marginRight","alignItems"],"sources":["/Users/hemanth/Desktop/Learn/Countrytest/CountryFind/src/components/Picker.js"],"sourcesContent":["import { View, Text, TextInput, TouchableOpacity } from 'react-native'\nimport React, { useState } from 'react'\nimport { Apifetch } from '../services/axios';\n\n\n    const SearchBar = ({ setSearchValue }) => {\n        const [inputValue, setInputValue] = useState('');\n        const [filterdata, setfilterData] = useState('');\n      \n        const handleInputChange = (text) => {\n          console.log('ttttttt',text);\n          setInputValue(text);\n        };\n      \n        const handleSearch = async () => {\n          const [data,err] = await Apifetch('region/europe');\n          console.log(typeof data ,\"search--------------------------------\");\n          // const response = await axios.get(`https://restcountries.com/v2/name/${inputValue}`);\n          setSearchValue(data);\n          setfilterData(data)\n        };\n\n      const renderItem = (second) => { return(\n        <View>\n          <Text>hi</Text>\n        </View>\n      ) }\n\n        return (\n          <>\n          <View style={{flex:1,flexDirection:'row',width:'95%',padding:10,justifyContent:'space-between',backgroundColor:'#D6E4E5',margin:10,borderRadius:30}}>\n            <TextInput\n              placeholder=\"Enter a country name\"\n              onChangeText={handleInputChange}\n              value={inputValue}\n              style={{width:'100%'}}\n            />\n            <TouchableOpacity onPress={handleSearch} style={{backgroundColor:'#EB6440',padding:10,marginRight:5,borderRadius:30,alignItems:'center',justifyContent:'center'}}>\n              <Text>Search</Text>\n            </TouchableOpacity>\n\n            \n\n          \n       \n          </View>\n          {/* <View style={{backgroundColor:'red',flex:1}}>\n            {filterdata?.map((item, index)=>{\n              console.log(item,'---item');\n            })}\n          </View> */}\n          </>\n\n        );\n      };\n      \n      \n      \n    //   const CountryDetails = ({ country }) => {\n    //     return (\n    //       <View>\n    //         <Text>{country.name}</Text>\n    //         <Text>{country.capital}</Text>\n    //         <Text>{country.region}</Text>\n    //         {/* Add other details you want to display */}\n    //       </View>\n    //     );\n    // };\n  \n\nexport default SearchBar"],"mappings":";;;;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGzC,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAA2B;EAAA,IAArBC,cAAc,GAAAD,IAAA,CAAdC,cAAc;EAC/B,IAAAC,SAAA,GAAoCX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChC,IAAAI,UAAA,GAAoChB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAzCE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAEhC,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,IAAI,EAAK;IAClCC,OAAO,CAACC,GAAG,CAAC,SAAS,EAACF,IAAI,CAAC;IAC3BN,aAAa,CAACM,IAAI,CAAC;EACrB,CAAC;EAED,IAAMG,YAAY;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC/B,IAAAC,eAAA,SAAyB1B,QAAQ,CAAC,eAAe,CAAC;QAAA2B,gBAAA,GAAAf,cAAA,CAAAc,eAAA;QAA3CE,IAAI,GAAAD,gBAAA;QAACE,GAAG,GAAAF,gBAAA;MACfN,OAAO,CAACC,GAAG,CAAC,OAAOM,IAAI,EAAE,wCAAwC,CAAC;MAElEnB,cAAc,CAACmB,IAAI,CAAC;MACpBV,aAAa,CAACU,IAAI,CAAC;IACrB,CAAC;IAAA,gBANKL,YAAYA,CAAA;MAAA,OAAAC,KAAA,CAAAM,KAAA,OAAAC,SAAA;IAAA;EAAA,GAMjB;EAEH,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAIC,MAAM,EAAK;IAAE,OAC/B/B,IAAA,CAACgC,IAAI;MAAAC,QAAA,EACHjC,IAAA,CAACkC,IAAI;QAAAD,QAAA,EAAC;MAAE,CAAM;IAAC,CACX,CAAC;EACP,CAAC;EAED,OACEjC,IAAA,CAAAI,SAAA;IAAA6B,QAAA,EACA/B,KAAA,CAAC8B,IAAI;MAACG,KAAK,EAAE;QAACC,IAAI,EAAC,CAAC;QAACC,aAAa,EAAC,KAAK;QAACC,KAAK,EAAC,KAAK;QAACC,OAAO,EAAC,EAAE;QAACC,cAAc,EAAC,eAAe;QAACC,eAAe,EAAC,SAAS;QAACC,MAAM,EAAC,EAAE;QAACC,YAAY,EAAC;MAAE,CAAE;MAAAV,QAAA,GAClJjC,IAAA,CAAC4C,SAAS;QACRC,WAAW,EAAC,sBAAsB;QAClCC,YAAY,EAAE7B,iBAAkB;QAChC8B,KAAK,EAAEpC,UAAW;QAClBwB,KAAK,EAAE;UAACG,KAAK,EAAC;QAAM;MAAE,CACvB,CAAC,EACFtC,IAAA,CAACgD,gBAAgB;QAACC,OAAO,EAAE5B,YAAa;QAACc,KAAK,EAAE;UAACM,eAAe,EAAC,SAAS;UAACF,OAAO,EAAC,EAAE;UAACW,WAAW,EAAC,CAAC;UAACP,YAAY,EAAC,EAAE;UAACQ,UAAU,EAAC,QAAQ;UAACX,cAAc,EAAC;QAAQ,CAAE;QAAAP,QAAA,EAC/JjC,IAAA,CAACkC,IAAI;UAAAD,QAAA,EAAC;QAAM,CAAM;MAAC,CACH,CAAC;IAAA,CAMf;EAAC,CAML,CAAC;AAGP,CAAC;AAgBP,eAAe5B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}