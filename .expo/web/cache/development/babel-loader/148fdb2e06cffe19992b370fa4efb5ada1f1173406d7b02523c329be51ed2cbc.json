{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Picker = function Picker() {\n  var SearchBar = function SearchBar(_ref) {\n    var setSearchValue = _ref.setSearchValue;\n    var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n    var handleInputChange = function handleInputChange(text) {\n      setInputValue(text);\n    };\n    var handleSearch = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var response = yield axios.get(\"https://restcountries.com/v2/name/\" + inputValue);\n        setSearchValue(response.data);\n      });\n      return function handleSearch() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    return _jsxs(View, {\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter a country name\",\n        onChangeText: handleInputChange,\n        value: inputValue\n      }), _jsx(TouchableOpacity, {\n        onPress: handleSearch,\n        children: _jsx(Text, {\n          children: \"Search\"\n        })\n      })]\n    });\n  };\n  var CountryDetails = function CountryDetails(_ref3) {\n    var country = _ref3.country;\n    return _jsxs(View, {\n      children: [_jsx(Text, {\n        children: country.name\n      }), _jsx(Text, {\n        children: country.capital\n      }), _jsx(Text, {\n        children: country.region\n      })]\n    });\n  };\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: \"Picker\"\n    })\n  });\n};\nexport default Picker;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Picker","SearchBar","_ref","setSearchValue","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","handleInputChange","text","handleSearch","_ref2","_asyncToGenerator","response","axios","get","data","apply","arguments","View","children","TextInput","placeholder","onChangeText","value","TouchableOpacity","onPress","Text","CountryDetails","_ref3","country","name","capital","region"],"sources":["/Users/hemanth/Desktop/Learn/Countrytest/CountryFind/src/components/Picker.js"],"sourcesContent":["import { View, Text, TextInput, TouchableOpacity } from 'react-native'\nimport React from 'react'\n\nconst Picker = () => {\n\n    const SearchBar = ({ setSearchValue }) => {\n        const [inputValue, setInputValue] = useState('');\n      \n        const handleInputChange = (text) => {\n          setInputValue(text);\n        };\n      \n        const handleSearch = async () => {\n          const response = await axios.get(`https://restcountries.com/v2/name/${inputValue}`);\n          setSearchValue(response.data);\n        };\n      \n        return (\n          <View>\n            <TextInput\n              placeholder=\"Enter a country name\"\n              onChangeText={handleInputChange}\n              value={inputValue}\n            />\n            <TouchableOpacity onPress={handleSearch}>\n              <Text>Search</Text>\n            </TouchableOpacity>\n          </View>\n        );\n      };\n      \n      \n      \n      const CountryDetails = ({ country }) => {\n        return (\n          <View>\n            <Text>{country.name}</Text>\n            <Text>{country.capital}</Text>\n            <Text>{country.region}</Text>\n            {/* Add other details you want to display */}\n          </View>\n        );\n    };\n  return (\n    <View>\n      <Text>Picker</Text>\n    </View>\n  )\n}\n\nexport default Picker"],"mappings":";;;;;;AACA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzB,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EAEjB,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAA2B;IAAA,IAArBC,cAAc,GAAAD,IAAA,CAAdC,cAAc;IAC/B,IAAAC,SAAA,GAAoCC,QAAQ,CAAC,EAAE,CAAC;MAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;MAAzCI,UAAU,GAAAF,UAAA;MAAEG,aAAa,GAAAH,UAAA;IAEhC,IAAMI,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,IAAI,EAAK;MAClCF,aAAa,CAACE,IAAI,CAAC;IACrB,CAAC;IAED,IAAMC,YAAY;MAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;QAC/B,IAAMC,QAAQ,SAASC,KAAK,CAACC,GAAG,wCAAsCT,UAAY,CAAC;QACnFL,cAAc,CAACY,QAAQ,CAACG,IAAI,CAAC;MAC/B,CAAC;MAAA,gBAHKN,YAAYA,CAAA;QAAA,OAAAC,KAAA,CAAAM,KAAA,OAAAC,SAAA;MAAA;IAAA,GAGjB;IAED,OACErB,KAAA,CAACsB,IAAI;MAAAC,QAAA,GACHzB,IAAA,CAAC0B,SAAS;QACRC,WAAW,EAAC,sBAAsB;QAClCC,YAAY,EAAEf,iBAAkB;QAChCgB,KAAK,EAAElB;MAAW,CACnB,CAAC,EACFX,IAAA,CAAC8B,gBAAgB;QAACC,OAAO,EAAEhB,YAAa;QAAAU,QAAA,EACtCzB,IAAA,CAACgC,IAAI;UAAAP,QAAA,EAAC;QAAM,CAAM;MAAC,CACH,CAAC;IAAA,CACf,CAAC;EAEX,CAAC;EAID,IAAMQ,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,KAAA,EAAoB;IAAA,IAAdC,OAAO,GAAAD,KAAA,CAAPC,OAAO;IAC/B,OACEjC,KAAA,CAACsB,IAAI;MAAAC,QAAA,GACHzB,IAAA,CAACgC,IAAI;QAAAP,QAAA,EAAEU,OAAO,CAACC;MAAI,CAAO,CAAC,EAC3BpC,IAAA,CAACgC,IAAI;QAAAP,QAAA,EAAEU,OAAO,CAACE;MAAO,CAAO,CAAC,EAC9BrC,IAAA,CAACgC,IAAI;QAAAP,QAAA,EAAEU,OAAO,CAACG;MAAM,CAAO,CAAC;IAAA,CAEzB,CAAC;EAEb,CAAC;EACH,OACEtC,IAAA,CAACwB,IAAI;IAAAC,QAAA,EACHzB,IAAA,CAACgC,IAAI;MAAAP,QAAA,EAAC;IAAM,CAAM;EAAC,CACf,CAAC;AAEX,CAAC;AAED,eAAetB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}