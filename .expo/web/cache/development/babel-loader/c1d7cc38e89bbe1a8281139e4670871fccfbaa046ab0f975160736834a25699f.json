{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BASE_URL, VERSION } from \"./constant\";\nvar api = axios.create({\n  baseURL: \"\" + (BASE_URL + VERSION),\n  headers: {\n    'content-type': 'application/json'\n  }\n});\nexport default useAxios;","map":{"version":3,"names":["useState","useEffect","axios","BASE_URL","VERSION","api","create","baseURL","headers","useAxios"],"sources":["/Users/hemanth/Desktop/Learn/Countrytest/CountryFind/src/services/axios.js"],"sourcesContent":["// import React from 'react';\n// import Axios from \"react-native-axios/lib/core/Axios\";\n// export const All = (url) => { \n// Axios.get('https://restcountries.com/v3.1/name/eesti')\n// .then(function(response){\n//     console.log(response,'-----response');\n// })\n// .catch(function(error){\n//     console.log(error,'--------------------------------err');\n// })\n// }\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BASE_URL, VERSION } from './constant';\n// const useAxios = (url) => {\n//   const [data, setData] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       setIsLoading(true);\n//       try {\n//         const response = await axios.get(`${BASE_URL+VERSION+url}`);\n//         // console.warn(response.data[0].name.common,'handker');\n//         setData(response.data);\n//         setIsLoading(false);\n//       } catch (error) {\n//         setError(error);\n//         setIsLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, [url]);\n\n//   return { data, error, isLoading };\n// };\n\nconst api= axios.create({\n    baseURL:`${BASE_URL+VERSION}`,\n    headers:{'content-type':'application/json'},\n})\n\nexport default useAxios;\n"],"mappings":"AAYA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,OAAO;AA0B1B,IAAMC,GAAG,GAAEH,KAAK,CAACI,MAAM,CAAC;EACpBC,OAAO,QAAIJ,QAAQ,GAACC,OAAO,CAAE;EAC7BI,OAAO,EAAC;IAAC,cAAc,EAAC;EAAkB;AAC9C,CAAC,CAAC;AAEF,eAAeC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}