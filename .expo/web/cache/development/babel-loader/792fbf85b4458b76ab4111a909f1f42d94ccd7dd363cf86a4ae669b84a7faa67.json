{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SearchBar = function SearchBar(_ref) {\n  var setSearchValue = _ref.setSearchValue;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputValue = _useState2[0],\n    setInputValue = _useState2[1];\n  var handleInputChange = function handleInputChange(text) {\n    setInputValue(text);\n  };\n  var handleSearch = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var _yield$Apifetch = yield Apifetch('region/europe'),\n        _yield$Apifetch2 = _slicedToArray(_yield$Apifetch, 2),\n        data = _yield$Apifetch2[0],\n        err = _yield$Apifetch2[1];\n      setSearchValue(data);\n    });\n    return function handleSearch() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      width: '90%',\n      padding: 10,\n      justifyContent: 'space-between',\n      backgroundColor: '#D6E4E5',\n      margin: 10,\n      borderRadius: 30\n    },\n    children: [_jsx(TextInput, {\n      placeholder: \"Enter a country name\",\n      onChangeText: handleInputChange,\n      value: inputValue\n    }), _jsx(TouchableOpacity, {\n      onPress: handleSearch,\n      style: {\n        backgroundColor: '#EB6440',\n        padding: 10,\n        marginRight: 10,\n        borderRadius: 30\n      },\n      children: _jsx(Text, {\n        children: \"Search\"\n      })\n    })]\n  });\n};\nexport default SearchBar;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","SearchBar","_ref","setSearchValue","_useState","_useState2","_slicedToArray","inputValue","setInputValue","handleInputChange","text","handleSearch","_ref2","_asyncToGenerator","_yield$Apifetch","Apifetch","_yield$Apifetch2","data","err","apply","arguments","View","style","flex","flexDirection","width","padding","justifyContent","backgroundColor","margin","borderRadius","children","TextInput","placeholder","onChangeText","value","TouchableOpacity","onPress","marginRight","Text"],"sources":["/Users/hemanth/Desktop/Learn/Countrytest/CountryFind/src/components/Picker.js"],"sourcesContent":["import { View, Text, TextInput, TouchableOpacity } from 'react-native'\nimport React, { useState } from 'react'\n\n\n    const SearchBar = ({ setSearchValue }) => {\n        const [inputValue, setInputValue] = useState('');\n      \n        const handleInputChange = (text) => {\n          setInputValue(text);\n        };\n      \n        const handleSearch = async () => {\n          const [data,err] = await Apifetch('region/europe');\n\n          // const response = await axios.get(`https://restcountries.com/v2/name/${inputValue}`);\n          setSearchValue(data);\n        };\n      \n        return (\n          <View style={{flex:1,flexDirection:'row',width:'90%',padding:10,justifyContent:'space-between',backgroundColor:'#D6E4E5',margin:10,borderRadius:30}}>\n            <TextInput\n              placeholder=\"Enter a country name\"\n              onChangeText={handleInputChange}\n              value={inputValue}\n            />\n            <TouchableOpacity onPress={handleSearch} style={{backgroundColor:'#EB6440',padding:10,marginRight:10,borderRadius:30}}>\n              <Text>Search</Text>\n            </TouchableOpacity>\n          </View>\n        );\n      };\n      \n      \n      \n    //   const CountryDetails = ({ country }) => {\n    //     return (\n    //       <View>\n    //         <Text>{country.name}</Text>\n    //         <Text>{country.capital}</Text>\n    //         <Text>{country.region}</Text>\n    //         {/* Add other details you want to display */}\n    //       </View>\n    //     );\n    // };\n  \n\nexport default SearchBar"],"mappings":";;;;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGnC,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAA2B;EAAA,IAArBC,cAAc,GAAAD,IAAA,CAAdC,cAAc;EAC/B,IAAAC,SAAA,GAAoCR,QAAQ,CAAC,EAAE,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhC,IAAMI,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,IAAI,EAAK;IAClCF,aAAa,CAACE,IAAI,CAAC;EACrB,CAAC;EAED,IAAMC,YAAY;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC/B,IAAAC,eAAA,SAAyBC,QAAQ,CAAC,eAAe,CAAC;QAAAC,gBAAA,GAAAV,cAAA,CAAAQ,eAAA;QAA3CG,IAAI,GAAAD,gBAAA;QAACE,GAAG,GAAAF,gBAAA;MAGfb,cAAc,CAACc,IAAI,CAAC;IACtB,CAAC;IAAA,gBALKN,YAAYA,CAAA;MAAA,OAAAC,KAAA,CAAAO,KAAA,OAAAC,SAAA;IAAA;EAAA,GAKjB;EAED,OACEpB,KAAA,CAACqB,IAAI;IAACC,KAAK,EAAE;MAACC,IAAI,EAAC,CAAC;MAACC,aAAa,EAAC,KAAK;MAACC,KAAK,EAAC,KAAK;MAACC,OAAO,EAAC,EAAE;MAACC,cAAc,EAAC,eAAe;MAACC,eAAe,EAAC,SAAS;MAACC,MAAM,EAAC,EAAE;MAACC,YAAY,EAAC;IAAE,CAAE;IAAAC,QAAA,GAClJjC,IAAA,CAACkC,SAAS;MACRC,WAAW,EAAC,sBAAsB;MAClCC,YAAY,EAAEzB,iBAAkB;MAChC0B,KAAK,EAAE5B;IAAW,CACnB,CAAC,EACFT,IAAA,CAACsC,gBAAgB;MAACC,OAAO,EAAE1B,YAAa;MAACW,KAAK,EAAE;QAACM,eAAe,EAAC,SAAS;QAACF,OAAO,EAAC,EAAE;QAACY,WAAW,EAAC,EAAE;QAACR,YAAY,EAAC;MAAE,CAAE;MAAAC,QAAA,EACpHjC,IAAA,CAACyC,IAAI;QAAAR,QAAA,EAAC;MAAM,CAAM;IAAC,CACH,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAgBP,eAAe9B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}