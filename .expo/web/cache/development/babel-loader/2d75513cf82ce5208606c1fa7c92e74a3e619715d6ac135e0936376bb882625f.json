{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from 'react';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar CountryDetails = function CountryDetails(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var countriesList = route.params.countriesList;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    natives = _useState2[0],\n    setNatives = _useState2[1];\n  var openMaps = function openMaps(url) {\n    Linking.openURL(url);\n  };\n  var nativeNameList = Object.keys(countriesList.name.nativeName).map(function (code) {\n    console.log(countriesList.maps.googleMaps, 'name');\n    return _jsxs(_Fragment, {\n      children: [_jsxs(Text, {\n        style: styles.TextStyle,\n        children: [\"official: \", countriesList.name.nativeName[code].official]\n      }), _jsxs(Text, {\n        style: styles.TextStyle,\n        children: [\"Common: \", countriesList.name.nativeName[code].common]\n      }), _jsx(TouchableOpacity, {\n        onPress: openMaps(countriesList.maps.googleMaps),\n        style: styles.MapsButton,\n        children: _jsx(Text, {\n          children: \"Open in Maps\"\n        })\n      })]\n    });\n  });\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.TextStyle,\n        children: countriesList.name.common\n      }), _jsx(Text, {\n        style: styles.TextStyle,\n        children: countriesList.capital\n      }), _jsx(Text, {\n        style: styles.TextStyle,\n        children: countriesList.region\n      }), _jsx(Text, {\n        style: styles.TextStyle,\n        children: countriesList.timezones\n      }), _jsx(Text, {\n        style: styles.TextStyle,\n        children: countriesList.population\n      }), nativeNameList]\n    })\n  });\n};\nexport default CountryDetails;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#D6E4E5',\n    padding: 10,\n    marginBottom: 10,\n    borderRadius: 10,\n    margin: 15\n  },\n  MapsButton: {\n    backgroundColor: '#EB6440',\n    padding: 10,\n    marginBottom: 10,\n    borderRadius: 10,\n    margin: 15,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  TextStyle: {\n    margin: 10\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","CountryDetails","_ref","route","navigation","countriesList","params","_useState","_useState2","_slicedToArray","natives","setNatives","openMaps","url","Linking","openURL","nativeNameList","Object","keys","name","nativeName","map","code","console","log","maps","googleMaps","children","Text","style","styles","TextStyle","official","common","TouchableOpacity","onPress","MapsButton","View","container","capital","region","timezones","population","StyleSheet","create","backgroundColor","padding","marginBottom","borderRadius","margin","justifyContent","alignItems"],"sources":["/Users/hemanth/Desktop/Learn/Countrytest/CountryFind/src/screens/CountryDetails.js"],"sourcesContent":["import { Linking, StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport React, { useEffect, useState } from 'react'\n\nconst CountryDetails = ({ route, navigation }) => {\n  const {countriesList}=route.params;\n  const [natives, setNatives] = useState('')\n\nconst openMaps = (url) => { \n  Linking.openURL(url)\n }\n    const nativeNameList = Object.keys(countriesList.name.nativeName).map((code)=>{\n      console.log(countriesList.maps.googleMaps,'name');\n      return(\n        <>\n          <Text style={styles.TextStyle}>official: {countriesList.name.nativeName[code].official}</Text>\n          <Text style={styles.TextStyle}>Common: {countriesList.name.nativeName[code].common}</Text>\n          <TouchableOpacity onPress={openMaps(countriesList.maps.googleMaps)} style={styles.MapsButton}>\n            <Text>Open in Maps</Text>\n          </TouchableOpacity>\n        </>\n\n      )\n    })\n  \n  return (\n    <>\n    <View style={styles.container}>\n      <Text style={styles.TextStyle}>{countriesList.name.common}</Text>\n      <Text style={styles.TextStyle}>{countriesList.capital}</Text>\n      <Text style={styles.TextStyle}>{countriesList.region}</Text>\n      <Text style={styles.TextStyle}>{countriesList.timezones}</Text>\n      <Text style={styles.TextStyle}>{countriesList.population}</Text>\n      {/* <Text>{countriesList.nativeName}</Text> */}\n      {nativeNameList}\n    </View>\n    \n    </>\n\n  )\n}\n\nexport default CountryDetails\n\nconst styles = StyleSheet.create({\n    container:{backgroundColor:'#D6E4E5',padding:10,marginBottom:10,borderRadius:10,margin:15},\n    MapsButton:{backgroundColor:'#EB6440',padding:10,marginBottom:10,borderRadius:10,margin:15,justifyContent:'center',alignItems:'center'},\n    TextStyle:{margin:10}\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}